public class Solution {

	public static void Merge(int ar[],int low,int mid,int high) {
		int temp[]=new int[ar.length];
		int left=low;
		int right=mid+1;
		int k=0;

		while(left<=mid && right<=high) {
			if(ar[left]<=ar[right]) {
				temp[k++]=ar[left];
				left++;
			}
			else {
				temp[k++]=ar[right];
				right++;
			}
		}
		while(left<=mid) {
				temp[k++]=ar[left];
				left++;
		}
		while(right<=high) {
				temp[k++]=ar[right];
				right++;
		}
		for(int i=low;i<=high;i++) {
			ar[i]=temp[i-low];
		}
	}
	public static void MS(int []ar,int low,int high) {
		if(low==high) return ;
		int mid=(low+high)/2;
		MS(ar,low,mid);
		MS(ar,mid+1,high);
		Merge(ar,low,mid,high);
	}
	public static void mergeSort(int[] arr, int n) {

		// Write your code here.
		MS(arr,0,n-1);
	}
}                                                                                                                                                                                                                                                     