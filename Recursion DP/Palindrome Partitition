class Solution {
  public boolean isPalindrome(String s,int start,int end) {
    while(start<=end) {
      if(s.charAt(start++)!=s.charAt(end--))
      return false;
    }
    return true;
  }
  public void generatePartition(List<List<String>> result,List<String> list,int idx,String s) {
    if(idx==s.length())
    {
      result.add(new ArrayList<>(list));
      return ;
    }
    for(int i=idx;i<s.length();++i) {
      if(isPalindrome(s,idx,i)) {
        list.add(s.substring(idx,i+1));
        generatePartition(result,list,i+1,s);
        list.remove(list.size()-1);
      }
    }
  }
    public List<List<String>> partition(String s) {
        List<List<String>> result=new ArrayList<>();
        List<String> list=new ArrayList<>();
        generatePartition(result,list,0,s);
        return result;
    }
}