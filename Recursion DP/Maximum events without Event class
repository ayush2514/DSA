import java.util.Arrays;

class Solution {
    int[][] dp;

    public int maxValue(int[][] events, int k) {
        Arrays.sort(events, (a, b) -> a[0] - b[0]);
        int n = events.length;
        dp = new int[n][k + 1];
        for (int i = 0; i < n; i++) {
            Arrays.fill(dp[i], -1);
        }
        return solve(events, 0, k, 0);
    }

    public int solve(int[][] events, int i, int k, int end) {
        if (i == events.length) {
            return 0;
        }
        if (k == 0) {
            return 0;
        }
        if (events[i][0] <= end) {
            return solve(events, i + 1, k, end);
        }
        if (dp[i][k] != -1) {
            return dp[i][k];
        }
        int choices = Math.max(events[i][2] + solve(events, i + 1, k - 1, events[i][1]), solve(events, i + 1, k, end));
        return dp[i][k] = choices;
    }
}
