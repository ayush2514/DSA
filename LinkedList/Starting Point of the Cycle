/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        ListNode slow=head;
        ListNode fast=head;
        ListNode anti=head;
        if(head==null || head.next==null)
        return null;
        while(head!=null && head.next!=null) {
          slow=slow.next;
          fast=fast.next.next;
          if(fast==null || fast.next==null)
           return null;
          if(fast==slow) {
            while(slow!=anti) {
              slow=slow.next;
              anti=anti.next;
            }
            return slow;
          }
        }
        return null;
    }
}